# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.text.html.mustache':
  'Log Helper':
    'prefix': 'log'
    'body': """
      {{log ${1:value}}}
    """

  'Debug Helper':
    'prefix': 'debugger'
    'body': """
      {{debugger}}
    """

  'Escape':
    'prefix': 'escape'
    'body': """
      {{{${1:value}}}}
    """

  'Each':
    'prefix': 'each'
    'body': """
      {{#each ${1:${2:item} ${3:in ${4:value}}}}}
        ${5}
      {{/each}}
    """

  'Each As':
    'prefix': 'eachas'
    'body': """
      {{#each ${2:item} as |${4:value}|}}
        ${5}

      {{else}}
        ${6}
      {{/each}}
    """

  'Each In':
    'prefix': 'eachin'
    'body': """
      {{#each-in ${2:item} as |${4:key} ${5:value}|}}
        ${6}
      {{/each-in}}
    """

  'Get':
    'prefix': 'get'
    'body': """
      {{get ${1:${2:item} ${3:value}}}}
    """

  'If':
    'prefix': 'if'
    'body': """
      {{#if ${1:bool}}}
        $2
      {{/if}}
    """

  'Else':
    'prefix': 'else'
    'body': '{{else}}${1}'

  'If/Else Block':
    'prefix': 'ifelse'
    'body': """
      {{#if ${1:bool}}}
        ${2}

      {{else}}
        ${3}
      {{/if}}
    """

  'Unless':
    'prefix': 'unless'
    'body': """
      {{#unless ${1: item}}}
        ${2}
      {{/unless}}
    """

  'Unless/Else':
    'prefix': 'unelse'
    'body': """
      {{#unless ${1:bool}}}
        ${2}

      {{else}}
        ${3}
      {{/unless}}
    """

  'With Block':
    'prefix': 'with'
    'body': """
      {{#with ${1:item} ${2:as ${3:|${4:value}|}}}}
        ${5}
      {{/with}}
    """

'.source.js':
  'Ember\'s init hook off anything':
    'prefix': 'e_i'
    'body': 'init() {\n\tthis._super( ...arguments );\n\n\t$1\n},'

  'Ember\'s setupController off route':
    'prefix': 'e_suc'
    'body': 'setupController( controller, model ) {\n\tthis._super( controller, model );\n\n\t$1\n},'

  'Ember\'s beforeModel hook off route':
    'prefix': 'e_bm'
    'body': 'beforeModel( transition ) {\n\t$1\n},'

  'Ember\'s model hook off route':
    'prefix': 'e_m'
    'body': 'model( params ) {\n\t$1\n},'

  'Ember\'s afterModel hook off route':
    'prefix': 'e_am'
    'body': 'afterModel( model, transition ) {\n\t$1\n},'

  'Ember\'s redirect off route':
    'prefix': 'e_rd'
    'body': 'redirect( model, transition ) {\n\t$1\n},'

  'Ember\'s resetController off route':
    'prefix': 'e_rc'
    'body': 'resetController( controller, isExiting, transition ) {\n\t$1\n},'

  'Ember\'s willTrasition off route':
    'prefix': 'e_wt'
    'body': 'willTrasition( transition ) {\n\t$1\n\n\treturn true;\n},'

  'Ember\'s didTransition off route':
    'prefix': 'e_dt'
    'body': 'didTransition() {\n\t$1\n\n\treturn true;\n},'

  'Ember\'s didInsertElement off component':
    'prefix': 'e_die'
    'body': 'didInsertElement() {\n\tthis._super( ...arguments );\n\n\t$1\n},'

  'Ember\'s didReceiveAttrs off component':
    'prefix': 'e_dra'
    'body': 'didReceiveAttrs() {\n\tthis._super( ...arguments );\n\n\t$1\n},'

  'Ember\'s willDestroyElement off component':
    'prefix': 'e_wde'
    'body': 'willDestroyElement() {\n\tthis._super( ...arguments );\n\n\t$1\n},'

  'Ember\'s normalizeResponse off serializer':
    'prefix': 'e_nr'
    'body': 'normalizeResponse( store, primaryModelClass, payload, id, requestType ) {\n\t$1\n\n\treturn this._super(store, primaryModelClass, payload, id, requestType);\n},'

  'console.debug':
    'prefix': 'debug'
    'body': 'console.debug($1);'

  'console.error':
    'prefix': 'error'
    'body': 'console.error($1);'

  'console.info':
    'prefix': 'info'
    'body': 'console.info($1);'

  'hi':
    'prefix': 'hi'
    'body': 'console.log(\'hi\');'

  'yolo':
    'prefix': 'yolo'
    'body': 'console.log(\'yolo\');'

  'death':
    'prefix': 'death'
    'body': 'console.log(\'death\');'

  'there':
    'prefix': 'there'
    'body': 'console.log(\'there\');'

  'bye':
    'prefix': 'bye'
    'body': 'console.log(\'bye\');'
